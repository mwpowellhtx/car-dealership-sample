@model IEnumerable<Powell.Vehicles.Mvc.Vehicle.VehicleViewModel>
@{
    ViewBag.Title = "Vehicles";
}

@Html.Partial("Scripts/ColorController")

<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>

<p>Arrange for Vehicle parameters here combining available Model Years with desired Color, current Mileage, and a brief Description.</p>

<script type="text/javascript">
    @* TODO: TBD: this script section is generally useful enough that perhaps it could go in a partial as well... *@
    $(function() {
        @* ReSharper disable once UseOfImplicitGlobalInFunctionScope *@
        colorCtrl
            @* ReSharper disable once PossiblyUnassignedProperty *@
            .subscribe(function(colors) {
                @* ReSharper disable once UseOfImplicitGlobalInFunctionScope, PossiblyUnassignedProperty *@
                colorCtrl.refreshSwatches();
            })
            @* ReSharper disable once PossiblyUnassignedProperty *@
            .subscribe(function(colors) {
                @* ReSharper disable once UseOfImplicitGlobalInFunctionScope, PossiblyUnassignedProperty *@
                colorCtrl.populateSelectmenu($("#inp-sel-color"));
            })
            @* ReSharper disable once PossiblyUnassignedProperty *@
            .getColorsFromServer();
    });

</script>

<script type="text/javascript">

    $(function() {
        var div = $("div[id='div-vehicles']");
        div.find("table").addClass("table-spacing");
        div.find("tr").addClass("table-greenbar");
        div.find("th").addClass("table-spacing");
        div.find("td").addClass("table-spacing");
    });

</script>

<script type="text/javascript">
    @* TODO: TBD: should seriously consider factoring this into a ViewController... especially for adding new / editing existing... *@
    $(function() {
        $("#btn-add-vehicle")
            .click(function() {

                var div = $("<div>")
                    .prop("id", "div-add-vehicle")
                    .append(
                        $("<table>")
                        .append(
                            $("<tr>")
                            .append(
                                $("<td>").append($("<label>").prop("for", "sel-modelyear").html("Model")),
                                $("<td>").append($("<select>").prop("name", "sel-modelyear").prop("id", "inp-sel-modelyear"))
                            ),
                            $("<tr>")
                            .append(
                                $("<td>").append($("<label>").prop("for", "sel-color").html("Color")),
                                $("<td>").append($("<select>").prop("name", "sel-color").prop("id", "inp-sel-color")),
                                $("<td>").append($("<div>").addClass("swatch").prop("id", "inp-color-swatch"))
                            ),
                            $("<tr>")
                            .append(
                                $("<td>").append($("<label>").prop("for", "inp-mileage").html("Mileage")),
                                $("<td>").append($("<input>").prop("colspan", 2).prop("name", "inp-mileage").prop("id", "inp-mileage").prop("type", "number").prop("title", "Please enter a positive number."))
                            ),
                            $("<tr>")
                            .append(
                                $("<td>").append($("<label>").prop("for", "inp-description").html("Description")),
                                $("<td>").append($("<input>").prop("colspan", 2).prop("name", "inp-description").prop("id", "inp-description").prop("type", "text"))
                            )
                        )
                    );

                div.dialog({
                        title: "Add Vehicle",
                        height: "auto",
                        width: "auto",
                        modal: true,
                        buttons: [
                            {
                                text: "OK",
                                click: function() {
                                    var mileage = parseFloat($("#inp-mileage").val());
                                    if (isNaN(mileage) || mileage < 0) {
                                        $("#inp-mileage").focus();
                                        return false;
                                    }
                                    $.post("/Vehicle/Add",
                                        {
                                            @* Remember to align the parameters with the correct shape. *@
                                            modelYearColorId: $("#inp-sel-modelyear option:selected").val(),
                                            colorId: $("#inp-sel-color option:selected").val(),
                                            mileage,
                                            description: $("#inp-description").val()
                                        })
                                        .done(function() {
                                            window.location.reload();
                                        });
                                }
                            }
                        ],
                        open: function() {
                            $(".ui-dialog-titlebar-close").hide();
                            @* TODO: TBD: these could potentially be deferred to controllers of their own... *@
                            @* Model and Year must be populated once Manufacturer and Model are known, respectively. *@
                            $("#inp-sel-modelyear")
                                .selectmenu({
                                    select: function() {
                                        var modelYearId = $("#inp-sel-modelyear option:selected").val();
                                        @* ReSharper disable once UseOfImplicitGlobalInFunctionScope, PossiblyUnassignedProperty *@
                                        var colorId = colorCtrl.findModelYearColorById(modelYearId).ColorId;
                                        $("#inp-sel-color").val(colorId).selectmenu("refresh");
                                        $("#inp-sel-color").parents("tr").find("div.swatch").attr("data-background-color-id", colorId);
                                        @* ReSharper disable once UseOfImplicitGlobalInFunctionScope, PossiblyUnassignedProperty *@
                                        colorCtrl.refreshSwatches();
                                    }
                                });

                            $("#inp-sel-color").selectmenu({
                                select: function() {
                                    var sel = $(this);
                                    @* Remember, this is the Paint.Id, not the color value itself. *@
                                    sel.parents("tr")
                                        .find("div.swatch")
                                        @* ReSharper disable once UseOfImplicitGlobalInFunctionScope, PossiblyUnassignedProperty *@
                                        .attr("data-background-color-id", sel.find("option:selected").val());
                                    @* Then refresh the swatches via the Color Controller. *@
                                    @* ReSharper disable once UseOfImplicitGlobalInFunctionScope, PossiblyUnassignedProperty *@
                                    colorCtrl.refreshSwatches();
                                }
                            });

                            $.get("/ModelYear/Get",
                                function(data) {
                                    @* ReSharper disable once UseOfImplicitGlobalInFunctionScope, PossiblyUnassignedProperty *@
                                    colorCtrl.registerModelYears(data);
                                    var sel = $("#inp-sel-modelyear");
                                    sel.find("option").remove();
                                    $.each(data,
                                        function(i, d) {
                                            @* TODO: TBD: Summary is sufficient here; for fancier stylistic drop downs, that's another matter... *@
                                            sel.append($("<option>").val(d.Id).html(d.Summary));
                                        });
                                    if (data.length) {
                                        @* ReSharper disable once PossiblyUnassignedProperty *@
                                        sel.val(data[0].Id).selectmenu("refresh");
                                    }
                                }).then(function() {
                                @* ReSharper disable once UseOfImplicitGlobalInFunctionScope, PossiblyUnassignedProperty *@
                                colorCtrl.populateSelectmenu($("#inp-sel-color"));
                            });
                        },
                        close: function() {
                            $(this).dialog("destroy").remove();
                        }
                    })
                    .keydown(function(event) {
                        if (event.keyCode === 13) {
                            @* eq(0) is close; so eq(1) in this case is "OK". *@
                            $(this).parent()
                                .find("button:eq(1)").trigger("click");
                            return false;
                        }
                        return undefined;
                    })
                    .addClass("reveal-modal")
                    .dialog("open");
            });
    });

</script>

<script type="text/javascript">

    $(function() {

        $("button[id^='btn-delete-vehicle-']")
            .click(function() {
                var id = $(this).parents("tr").find("input[id^='vehicle-id-']").val();

                var div = $("<div>")
                    .append(
                        $("<p>").append("Do you want to delete the vehicle?")
                    )
                    .dialog({
                        title: "Delete Vehicle",
                        height: "auto",
                        width: "auto",
                        modal: true,
                        buttons: [
                            {
                                text:"OK",
                                click: function() {
                                    $.post("/Vehicle/Delete", { vehicleId: id })
                                        .then(function() {
                                            window.location.reload();
                                        });
                                }
                            }
                        ],
                        open: function() {
                            $(".ui-dialog-titlebar-close").hide();
                        },
                        close: function() {
                            $(this).dialog("destroy").remove();
                        }
                    });

                return false;
            });
    });

</script>

<button type="submit" id="btn-add-vehicle" title="Add Vehicle">
    <span class="glyphicon glyphicon-plus"></span>
</button>

<div id="div-vehicles">
    <table>

        <tr>
            <th>@Html.LabelFor(x => x.FirstOrDefault().ManufacturerName)</th>
            <th>@Html.LabelFor(x => x.FirstOrDefault().ModelName)</th>
            <th colspan="2">@Html.LabelFor(x => x.FirstOrDefault().ColorName)</th>
            <th>@Html.LabelFor(x => x.FirstOrDefault().Mileage)</th>
            <th width="200">@Html.LabelFor(x => x.FirstOrDefault().Description)</th>
            <th colspan="2"></th>
        </tr>

        @for (var i = 0; i < Model.Count(); i++)
        {
            <tr class="top-alignment">
                <td>
                    @Html.HiddenFor(x => x.ElementAt(i).Id, new {id=$"vehicle-id-{Model.ElementAt(i).Id:D}"})
                    @Html.DisplayTextFor(x => x.ElementAt(i).ManufacturerName)
                </td>
                <td>@Html.DisplayTextFor(x => x.ElementAt(i).ModelName)</td>
                <td>@Html.DisplayTextFor(x => x.ElementAt(i).ColorName)</td>
                <td>
                    <div class="swatch" data-background-color-id="@(Model.ElementAt(i).ColorId)"></div>
                </td>
                <td>@Html.DisplayTextFor(x => x.ElementAt(i).Mileage)</td>
                <td>@Html.DisplayTextFor(x => x.ElementAt(i).Description)</td>
                <td>
                    <button type="submit" id="btn-delete-vehicle-@($"{Model.ElementAt(i).Id:D}")" title="Delete Vehicle">
                        <span class="glyphicon glyphicon-trash"></span>
                    </button>
                </td>
            </tr>
        }

    </table>
</div>
